AWSTemplateFormatVersion: '2010-09-09'
Description: An example CloudFormation template to create a Lambda function
Parameters:
  Project:
    Type: String
    Description: Project name
    Default: ""
  Environment:
    Type: String
    Description: Environment ID
    Default: ""
  Application:
    Type: String
    Description: Application name
    Default: ""
  Costcenter:
    Type: String
    Description: Cost center
    Default: ""
  Platform:
    Type: String
    Description: Platform name
    Default: aws
  Handler:
    Type: String
    Description: Handler function for the Lambda function
    Default: lambda_function.handler
  Runtime:
    Type: String
    Description: Runtime for the Lambda function
    Default: python3.8
  Timeout:
    Type: Number
    Description: Timeout value for the Lambda function
    Default: 180
  MemorySize:
    Type: Number
    Description: Memory size for the Lambda function
    Default: 1024
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of Subnet IDs for the Lambda function
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC Id
  SecurityGroup:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: Lambda Security Group

Resources:
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub ${Project}-${Environment}-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DeleteNetworkInterface'
                Resource: '*'  
      Tags:
        - Key: "Name"
          Value: !Sub ${Project}-${Environment}-lambda-role
        - Key: "environment"
          Value: !Ref Environment
        - Key: "application"
          Value: !Ref Application
        - Key: "costcenter"
          Value: !Ref Costcenter
        - Key: "platform"
          Value: !Ref Platform

  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub ${Project}-${Environment}-lambda-function
      Handler: !Ref Handler
      Runtime: !Ref Runtime
      Code:
        ZipFile: |
          def lambda_handler(event, context):
              print('Hello, Lambda!')
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: !Ref Timeout
      MemorySize: !Ref MemorySize
      VpcConfig:
        SecurityGroupIds: !Ref SecurityGroup
        SubnetIds: !Ref SubnetIds
      Tags:
        - Key: "Name"
          Value: !Sub ${Project}-${Environment}-lambda-function
        - Key: "environment"
          Value: !Ref Environment
        - Key: "application"
          Value: !Ref Application
        - Key: "costcenter"
          Value: !Ref Costcenter
        - Key: "platform"
          Value: !Ref Platform
